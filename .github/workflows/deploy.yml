# .github/workflows/deploy.yml
#
# This workflow will build and deploy your project to GitHub Pages.
# It securely injects your Firebase configuration at build time.
#
name: Build and Deploy to GitHub Pages

on:
  # Runs on pushes to the main branch
  push:
    branches:
      - main
      - master # Also include master just in case

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Use a recent LTS version of Node.js

      - name: Create Firebase Config File
        run: |
          # Create the directory if it doesn't exist (adjust the path if needed)
          mkdir -p src 
          # Create the firebaseConfig.js file and populate it with the secret
          echo "export const firebaseConfig = ${{ secrets.FIREBASE_CONFIG }};" > src/firebaseConfig.js
        # This command takes the FIREBASE_CONFIG secret and writes it into a file
        # located at 'src/firebaseConfig.js'.
        # IMPORTANT: Make sure the path 'src/firebaseConfig.js' matches where your
        # application expects to find this file. If your firebase initialization
        # is in a different folder, update the path here.

      - name: Install Dependencies
        run: npm install
        # This runs the standard npm install to get all your project's packages.

      - name: Build Project
        run: npm run build
        # This runs the build script defined in your package.json.
        # If your build script is named something else, change 'build' accordingly.

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          # The 'publish_dir' should be your project's build output directory.
          # Common names are 'dist', 'build', or 'public'. Check your project's
          # configuration (e.g., vite.config.js or similar) to be sure.

